branches:
  only:
  - master
  - develop
  - feature/cc-codecoverage

dist: xenial
os: linux
addons:
  apt:
    packages:
      - build-essential
      - curl
      - libltdl7
      - git
      - make

services:
  - docker

language: python
python:
  - "3.7"

env:
  global:
    - TEST_NODE=http://localhost:3013
    - TEST_URL=http://localhost:3013
    - TEST_DEBUG_URL=http://localhost:3113
    - TEST_NETWORK_ID=ae_devnet
    - COMPILER_URL=http://localhost:3080
    - FORCE_COMPATIBILITY=false

cache:
  timeout: 604800 # 7 days
  directories:
    - $HOME/.cache/pip

before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

before_install:
  - docker-compose up -d node compiler
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter

install:
  - pip install -r requirements.txt

before_script:
  - ./cc-test-reporter before-build

jobs:
  include:
    - stage: Tests
      name: Test AENS, Channels
      if: type != "cron"
      script:
        - make test TEST_OPTS="-k 'test_name or test_channel'"
        - cp coverage.xml coverage.1/coverage.xml
      workspaces:
        create:
          name: coverage1
          paths:
            - "coverage.1"
    - stage: Tests
      name: Test Compiler, Contracts, Sophia Transformation, Hashing, CLI, HDWallet, Oracle, Node, OpenAPI, Signing, Transactions, Utils
      if: type != "cron"
      script:
        - make test TEST_OPTS="-k 'test_sophia or test_contract_native or test_type_conversion_to_sophia or test_oracle or test_cli or test_transaction or test_utils or test_hashing or test_hdwallet or test_node or test_generatedcli or test_signing'"
        - cp coverage.xml coverage.2/coverage.xml
      workspaces:
        create:
          name: coverage2
          paths:
            - "coverage.2"
    - stage: Tests
      name: Test API, Tutorials, Examples
      if: type != "cron"
      script:
        - make test TEST_OPTS="-k 'test_api or test_tutorial or test_example'"
        - cp coverage.xml coverage.3/coverage.xml
      workspaces:
        create:
          name: coverage3
          paths:
            - "coverage.3"
    - stage: Test with latest node and compiler
      if: type = "cron"
      env:
        - NODE_TAG=master
        - COMPILER_TAG=latest
        - FORCE_COMPATIBILITY=true
      script:
        - make lint
        - make test
    - stage: Upload test coverage
      workspaces:
        use:
          - coverage1
          - coverage2
          - coverage3
      if: type != "cron"
      script:
        - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter sum-coverage --output - --parts 3 coverage.*/coverage.xml | ./cc-test-reporter upload-coverage --input -; fi
